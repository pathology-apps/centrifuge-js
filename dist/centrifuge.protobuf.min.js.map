{"version":3,"sources":["webpack://Centrifuge/webpack/universalModuleDefinition","webpack://Centrifuge/./node_modules/@protobufjs/aspromise/index.js","webpack://Centrifuge/./node_modules/@protobufjs/base64/index.js","webpack://Centrifuge/./node_modules/@protobufjs/codegen/index.js","webpack://Centrifuge/./node_modules/@protobufjs/eventemitter/index.js","webpack://Centrifuge/./node_modules/@protobufjs/fetch/index.js","webpack://Centrifuge/./node_modules/@protobufjs/float/index.js","webpack://Centrifuge/./node_modules/@protobufjs/inquire/index.js","webpack://Centrifuge/./node_modules/@protobufjs/path/index.js","webpack://Centrifuge/./node_modules/@protobufjs/pool/index.js","webpack://Centrifuge/./node_modules/@protobufjs/utf8/index.js","webpack://Centrifuge/./src/centrifuge.js","webpack://Centrifuge/./src/index_protobuf.js","webpack://Centrifuge/./src/json.js","webpack://Centrifuge/./src/protobuf.js","webpack://Centrifuge/./src/subscription.js","webpack://Centrifuge/./src/utils.js","webpack://Centrifuge/./node_modules/events/events.js","webpack://Centrifuge/./node_modules/protobufjs/light.js","webpack://Centrifuge/./node_modules/protobufjs/src/converter.js","webpack://Centrifuge/./node_modules/protobufjs/src/decoder.js","webpack://Centrifuge/./node_modules/protobufjs/src/encoder.js","webpack://Centrifuge/./node_modules/protobufjs/src/enum.js","webpack://Centrifuge/./node_modules/protobufjs/src/field.js","webpack://Centrifuge/./node_modules/protobufjs/src/index-light.js","webpack://Centrifuge/./node_modules/protobufjs/src/index-minimal.js","webpack://Centrifuge/./node_modules/protobufjs/src/mapfield.js","webpack://Centrifuge/./node_modules/protobufjs/src/message.js","webpack://Centrifuge/./node_modules/protobufjs/src/method.js","webpack://Centrifuge/./node_modules/protobufjs/src/namespace.js","webpack://Centrifuge/./node_modules/protobufjs/src/object.js","webpack://Centrifuge/./node_modules/protobufjs/src/oneof.js","webpack://Centrifuge/./node_modules/protobufjs/src/reader.js","webpack://Centrifuge/./node_modules/protobufjs/src/reader_buffer.js","webpack://Centrifuge/./node_modules/protobufjs/src/root.js","webpack://Centrifuge/./node_modules/protobufjs/src/roots.js","webpack://Centrifuge/./node_modules/protobufjs/src/rpc.js","webpack://Centrifuge/./node_modules/protobufjs/src/rpc/service.js","webpack://Centrifuge/./node_modules/protobufjs/src/service.js","webpack://Centrifuge/./node_modules/protobufjs/src/type.js","webpack://Centrifuge/./node_modules/protobufjs/src/types.js","webpack://Centrifuge/./node_modules/protobufjs/src/util.js","webpack://Centrifuge/./node_modules/protobufjs/src/util/longbits.js","webpack://Centrifuge/./node_modules/protobufjs/src/util/minimal.js","webpack://Centrifuge/./node_modules/protobufjs/src/verifier.js","webpack://Centrifuge/./node_modules/protobufjs/src/wrappers.js","webpack://Centrifuge/./node_modules/protobufjs/src/writer.js","webpack://Centrifuge/./node_modules/protobufjs/src/writer_buffer.js","webpack://Centrifuge/webpack/bootstrap","webpack://Centrifuge/webpack/startup","webpack://Centrifuge/webpack/runtime/global"],"names":["root","factory","exports","module","define","amd","this","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","replace","$0","$1","value","Number","floor","JSON","stringify","functionNameOverride","EventEmitter","_listeners","prototype","on","evt","off","listeners","splice","emit","args","fetch","asPromise","fs","inquire","filename","options","callback","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","status","response","responseText","Uint8Array","overrideMimeType","responseType","open","send","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","moduleName","mod","eval","e","path","isAbsolute","normalize","split","absolute","prefix","shift","originPath","includePath","alreadyNormalized","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","_errorTimeout","_errorConnectionClosed","Centrifuge","url","_url","_websocket","_sockjs","_isSockjs","_xmlhttprequest","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastSeq","_lastGen","_lastOffset","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","_config","debug","name","version","websocket","sockjs","xmlhttprequest","middleware","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","disableWithCredentials","_configure","token","data","headers","fns","query","_debug","global","ActiveXObject","hasOwnProperty","encodeURIComponent","headerName","withCredentials","setRequestHeader","parsed","parse","error","_log","setTimeout","WebSocket","format","_formatOverride","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","extend","startsWith","indexOf","_setFormat","SockJS","newStatus","interval","backoff","xhrID","abort","reconnect","id","_stopPing","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","onheartbeat","_restartPing","msg","subs","hasSubs","recoverable","seq","gen","epoch","Date","_call","then","resolveCtx","_connectResponse","decodeCommandResult","CONNECT","result","next","rejectCtx","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","method","RPC","_methodCall","SEND","isConnected","_transportSend","since","limit","resultCB","PUBLISH","_getHistoryParams","HISTORY","publications","PRESENCE","presence","PRESENCE_STATS","num_users","num_clients","replies","decodeReplies","finishDispatch","_dispatchSynchronized","isArray","forEach","mw","_hookMiddleware","_dispatchReply","reply","_handleReply","_handlePush","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","close","_refreshFailed","clientID","_newXHRID","cb","resp","jitter","random","max","REFRESH","_refreshResponse","_refreshError","_ajax","expires","client","_getTTLMilliseconds","ttl","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","_subscribeResponse","_subscribeError","_setNew","UNSUBSCRIBE","min","isRecover","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","latency","_processServerSubs","subCtx","_expandSubscribeContext","recovered","pubs","reverse","_handlePublication","_isSubscribing","message","_setSubscribeError","positioned","streamPosition","_setSubscribeSuccess","_recoverable","errorExists","info","_isServerSub","leave","unsub","unsubscribe","resubscribe","subscribe","pub","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","SUB","_handleSub","messages","PING","_pingResponse","isFunction","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","events","currentSub","_setEvents","_isUnsubscribed","Subscription","CentrifugeProtobuf","map","filter","r","methodType","pushType","protobuf","require","proto","Root","fromJSON","methodValues","lookupEnum","values","protobufMethodType","methodSchema","lookupType","protobufPushType","PushSchema","Push","Command","Reply","ProtobufEncoder","writer","Writer","create","assign","finish","encodeDelimited","ProtobufDecoder","reader","Reader","decodeDelimited","_decode","res","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","errContext","_resolve","_reject","knownEvents","l","ev","subscribeResult","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","_isError","rej","_nextPromiseId","self","publish","presenceStats","history","lastIndexOf","level","logger","step","a","key","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","init","once","emitter","eventListener","errorListener","removeListener","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","existing","warning","newListener","unshift","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","handler","addListener","prependListener","prependOnceListener","list","position","originalListener","pop","spliceOne","removeAllListeners","rawListeners","eventNames","converter","Enum","util","genValuePartial_fromObject","field","fieldIndex","prop","resolvedType","repeated","typeDefault","fullName","isUnsigned","genValuePartial_toObject","fromObject","mtype","fields","fieldsArray","safeProp","toObject","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","valuesById","long","low","high","unsigned","toNumber","bytes","arrayDefault","hasKs2","_fieldsArray","group","ref","types","defaults","keyType","basic","packed","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","constructor","className","Namespace","comment","comments","reserved","json","enm","toJSON","toJSONOptions","keepComments","Boolean","add","isString","isInteger","isReservedId","isReservedName","allow_alias","remove","Field","Type","ruleRe","rule","isObject","toLowerCase","defaultValue","Long","extensionField","declaringField","_packed","getOption","setOption","ifNotSet","resolved","parent","lookupTypeOrEnum","fromNumber","freeze","newBuffer","emptyObject","emptyArray","ctor","d","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldName","Type_","build","load","loadSync","encoder","decoder","verifier","OneOf","MapField","Service","Method","Message","wrappers","configure","BufferWriter","BufferReader","rpc","roots","resolvedKeyType","fieldKeyType","fieldValueType","properties","$type","verify","object","requestType","requestStream","responseStream","parsedOptions","resolvedRequestType","resolvedResponseType","arrayToJSON","array","obj","nested","_nestedArray","clearCache","namespace","addJSON","toArray","nestedArray","nestedJson","names","methods","getEnum","prev","setOptions","onAdd","onRemove","ptr","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","lookupService","Service_","Enum_","defineProperties","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","newValue","setProperty","newOpt","Root_","fieldNames","oneof","addFieldsToParent","oneofName","oneOfGetter","oneOfSetter","LongBits","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","skip","skipType","BufferReader_","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","common","deferred","files","SYNC","resolvePath","sync","getBundledFileName","idx","altname","substring","process","imports","weakImports","queued","weak","readFileSync","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","endedByRPC","_methodsArray","service","inherited","methodsArray","rpcService","methodName","lcFirst","isReserved","q","s","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","setup","wrapper","originalThis","fork","ldelim","typeName","bake","o","safePropBackslashRe","safePropQuoteRe","ucFirst","str","toUpperCase","camelCaseRe","camelCase","decorateRoot","decorateEnumIndex","dst","setProp","prevValue","zero","zzEncode","zeroHash","from","parseInt","fromString","toLong","fromHash","hash","toHash","mask","part0","part1","part2","src","newError","CustomError","captureStackTrace","stack","pool","g","versions","node","window","isFinite","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","longs","enums","encoding","allocUnsafe","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","expected","type_url","substr","Op","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","byteLength","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis"],"mappings":"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","file":"centrifuge.protobuf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._xmlhttprequest = null;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._config = {\n      debug: false,\n      name: '',\n      version: '',\n      websocket: null,\n      sockjs: null,\n      xmlhttprequest: null,\n      middleware: [],\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null,\n      disableWithCredentials: false\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n  setMiddleware(...fns) {\n    this._config.middleware = fns;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    let xhr;\n    if (this._xmlhttprequest !== null) {\n      // use explicitly passed XMLHttpRequest object.\n      xhr = new this._xmlhttprequest();\n    } else {\n      xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n    }\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = !this._config.disableWithCredentials;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n\n    this._xmlhttprequest = this._config.xmlhttprequest;\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({error: this._createErrorObject('disconnected')});\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({error: this._createErrorObject(_errorConnectionClosed, 0)});\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      this._transport = new this._websocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData || this._config.name || this._config.version) {\n        msg.params = {};\n      }\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n      if (this._config.name) {\n        msg.params.name = this._config.name;\n      }\n      if (this._config.version) {\n        msg.params.version = this._config.version;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        if (!msg.params) {msg.params = {};}\n        msg.params.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result), hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    let params = {\n      data: data\n    };\n    if (method !== '') {\n      params.method = method;\n    };\n    const msg = {\n      method: this._methodType.RPC,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  _getHistoryParams(channel, options) {\n    let params = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        params['use_since'] = true;\n        if (options.since.offset) {\n          params['offset'] = options.since.offset;\n        }\n        if (options.since.epoch) {\n          params['epoch'] = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        params['use_limit'] = true;\n        params['limit'] = options.limit;\n      }\n    };\n    return params;\n  }\n\n  _methodCall(msg, resultCB) {\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve(resultCB(this._decoder.decodeCommandResult(msg.method, resolveCtx.result)));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n    return this._methodCall(msg, function () {\n      return {};\n    });\n  }\n\n  history(channel, options) {\n    const params = this._getHistoryParams(channel, options);\n    const msg = {\n      method: this._methodType.HISTORY,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'publications': result.publications,\n        'epoch': result.epoch || '',\n        'offset': result.offset || 0\n      };\n    });\n  }\n\n  presence(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'presence': result.presence\n      };\n    });\n  }\n\n  presenceStats(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE_STATS,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'num_users': result.num_users,\n        'num_clients': result.num_clients\n      };\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve =>{\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _hookMiddleware(data) {\n    const {middleware} = this._config;\n    if (Array.isArray(middleware)) {\n      middleware.forEach(mw => {\n        if (typeof mw === 'function') {\n          mw(data);\n        }\n      });\n    }\n\n    if (typeof middleware === 'function') {\n      middleware(data);\n    }\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          this._hookMiddleware(replies[i]);\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', {channel: channel});\n        }\n      }\n      this.emit('disconnect', {\n        reason: reason,\n        reconnect: reconnect\n      });\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          if (gen) {\n            msg.params.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            msg.params.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs);\n    }\n  };\n\n  _processServerSubs(subs) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const isResubscribe = this._serverSubs[channel] !== undefined;\n        let subCtx = {channel: channel, isResubscribe: isResubscribe};\n        subCtx = this._expandSubscribeContext(subCtx, sub);\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _expandSubscribeContext(ctx, result) {\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    ctx.recovered = recovered;\n\n    let positioned = false;\n    if ('positioned' in result) {\n      positioned = result.positioned;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (positioned) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n    return ctx;\n  }\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribeSuccess(result);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !result.recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({error, next});\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = {'info': join.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = {'info': leave.info};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    let ctx = {'channel': channel, isResubscribe: false};\n    ctx = this._expandSubscribeContext(ctx, sub);\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUB) {\n      const sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({error: this._createErrorObject(_errorTimeout)});\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  msg.params.seq = seq;\n                }\n                if (gen) {\n                  msg.params.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  msg.params.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n","import {CentrifugeProtobuf} from './protobuf.js';\nexport default CentrifugeProtobuf;\n","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4,\n  SUB: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    return commands.map(c => JSON.stringify(c)).join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    return data.split('\\n').filter(r => r !== '').map(r => JSON.parse(r));\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n","import {Centrifuge} from './centrifuge.js';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst methodValues = proto.lookupEnum('MethodType').values;\n\nconst protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nconst methodSchema = {\n  CONNECT: [\n    proto.lookupType('protocol.ConnectRequest'),\n    proto.lookupType('protocol.ConnectResult')\n  ],\n  REFRESH: [\n    proto.lookupType('protocol.RefreshRequest'),\n    proto.lookupType('protocol.RefreshResult')\n  ],\n  SUBSCRIBE: [\n    proto.lookupType('protocol.SubscribeRequest'),\n    proto.lookupType('protocol.SubscribeResult')\n  ],\n  SUB_REFRESH: [\n    proto.lookupType('protocol.SubRefreshRequest'),\n    proto.lookupType('protocol.SubRefreshResult')\n  ],\n  UNSUBSCRIBE: [\n    proto.lookupType('protocol.UnsubscribeRequest'),\n    proto.lookupType('protocol.UnsubscribeResult')\n  ],\n  PUBLISH: [\n    proto.lookupType('protocol.PublishRequest'),\n    proto.lookupType('protocol.PublishResult')\n  ],\n  PRESENCE: [\n    proto.lookupType('protocol.PresenceRequest'),\n    proto.lookupType('protocol.PresenceResult')\n  ],\n  PRESENCE_STATS: [\n    proto.lookupType('protocol.PresenceStatsRequest'),\n    proto.lookupType('protocol.PresenceStatsResult')\n  ],\n  HISTORY: [\n    proto.lookupType('protocol.HistoryRequest'),\n    proto.lookupType('protocol.HistoryResult')\n  ],\n  PING: [\n    proto.lookupType('protocol.PingRequest'),\n    proto.lookupType('protocol.PingResult')\n  ],\n  RPC: [\n    proto.lookupType('protocol.RPCRequest'),\n    proto.lookupType('protocol.RPCResult')\n  ],\n  SEND: [\n    proto.lookupType('protocol.SendRequest'),\n    null\n  ]\n};\n\nconst protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE,\n  SUB: proto.lookupEnum('PushType').values.SUB\n};\n\nconst PushSchema = {\n  PUBLICATION: proto.lookupType('protocol.Publication'),\n  JOIN: proto.lookupType('protocol.Join'),\n  LEAVE: proto.lookupType('protocol.Leave'),\n  UNSUB: proto.lookupType('protocol.Unsub'),\n  MESSAGE: proto.lookupType('protocol.Message'),\n  SUB: proto.lookupType('protocol.Sub')\n};\n\nconst Push = proto.lookupType('protocol.Push');\nconst Command = proto.lookupType('protocol.Command');\nconst Reply = proto.lookupType('protocol.Reply');\n\nexport class ProtobufEncoder {\n  encodeCommands(commands) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        if (command.params) {\n          let type;\n          if (!command.method) {\n            command.method = protobufMethodType.CONNECT;\n          };\n          switch (command.method) {\n            case protobufMethodType.CONNECT:\n              type = methodSchema.CONNECT[0];\n              break;\n            case protobufMethodType.REFRESH:\n              type = methodSchema.REFRESH[0];\n              break;\n            case protobufMethodType.SUBSCRIBE:\n              type = methodSchema.SUBSCRIBE[0];\n              break;\n            case protobufMethodType.SUB_REFRESH:\n              type = methodSchema.SUB_REFRESH[0];\n              break;\n            case protobufMethodType.UNSUBSCRIBE:\n              type = methodSchema.UNSUBSCRIBE[0];\n              break;\n            case protobufMethodType.PUBLISH:\n              type = methodSchema.PUBLISH[0];\n              break;\n            case protobufMethodType.PRESENCE:\n              type = methodSchema.PRESENCE[0];\n              break;\n            case protobufMethodType.PRESENCE_STATS:\n              type = methodSchema.PRESENCE_STATS[0];\n              break;\n            case protobufMethodType.HISTORY:\n              type = methodSchema.HISTORY[0];\n              break;\n            case protobufMethodType.PING:\n              type = methodSchema.PING[0];\n              break;\n            case protobufMethodType.RPC:\n              type = methodSchema.RPC[0];\n              break;\n            case protobufMethodType.SEND:\n              type = methodSchema.SEND[0];\n              break;\n          }\n          command.params = type.encode(command.params).finish();\n        }\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    var type;\n    switch (methodType) {\n      case protobufMethodType.CONNECT:\n        type = methodSchema.CONNECT[1];\n        break;\n      case protobufMethodType.REFRESH:\n        type = methodSchema.REFRESH[1];\n        break;\n      case protobufMethodType.SUBSCRIBE:\n        type = methodSchema.SUBSCRIBE[1];\n        break;\n      case protobufMethodType.SUB_REFRESH:\n        type = methodSchema.SUB_REFRESH[1];\n        break;\n      case protobufMethodType.UNSUBSCRIBE:\n        type = methodSchema.UNSUBSCRIBE[1];\n        break;\n      case protobufMethodType.PUBLISH:\n        type = methodSchema.PUBLISH[1];\n        break;\n      case protobufMethodType.PRESENCE:\n        type = methodSchema.PRESENCE[1];\n        break;\n      case protobufMethodType.PRESENCE_STATS:\n        type = methodSchema.PRESENCE_STATS[1];\n        break;\n      case protobufMethodType.HISTORY:\n        type = methodSchema.HISTORY[1];\n        break;\n      case protobufMethodType.PING:\n        type = methodSchema.PING[1];\n        break;\n      case protobufMethodType.RPC:\n        type = methodSchema.RPC[1];\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  decodePush(data) {\n    return this._decode(Push, data);\n  }\n\n  decodePushData(pushType, data) {\n    var type;\n    switch (pushType) {\n      case protobufPushType.PUBLICATION:\n        type = PushSchema.PUBLICATION;\n        break;\n      case protobufPushType.MESSAGE:\n        type = PushSchema.MESSAGE;\n        break;\n      case protobufPushType.JOIN:\n        type = PushSchema.JOIN;\n        break;\n      case protobufPushType.LEAVE:\n        type = PushSchema.LEAVE;\n        break;\n      case protobufPushType.UNSUB:\n        type = PushSchema.UNSUB;\n        break;\n      case protobufPushType.SUB:\n        type = PushSchema.SUB;\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  _decode(type, data) {\n    let res;\n    try {\n      res = type.decode(data);\n    } catch (err) {\n      return null;\n    }\n    return res;\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n  _formatOverride(format) {\n    if (format === 'protobuf') {\n      this._binary = true;\n      this._methodType = protobufMethodType;\n      this._pushType = protobufPushType;\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(subscribeResult) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(subscribeResult);\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(subscribeResult) {\n    let ctx = {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe\n    };\n    if (subscribeResult) {\n      // subscribeResult not available when called from Subscription.ready method at the moment.\n      ctx = this._centrifuge._expandSubscribeContext(ctx, subscribeResult);\n    }\n    return ctx;\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall() {\n    if (this._isSuccess()) {\n      return Promise.resolve();\n    } else if (this._isError()) {\n      return Promise.reject(this._error);\n    }\n    let subPromise = new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({'code': 0, 'message': 'timeout'});\n      }, this._centrifuge._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n    return subPromise;\n  }\n\n  publish(data) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.publish(self.channel, data);\n    });\n  };\n\n  presence() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presence(self.channel);\n    });\n  };\n\n  presenceStats() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presenceStats(self.channel);\n    });\n  };\n\n  history(options) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.history(self.channel, options);\n    });\n  };\n}\n","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(714);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"sourceRoot":""}